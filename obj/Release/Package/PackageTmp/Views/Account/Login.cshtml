@using WashAndGo.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<style>

    input{
        max-width:100%;
    }

    .panel-default {
        border-color: #1487eb;
        border-width: 3px;
        margin-top: 25%;
    }

        h3{
        color:aqua;
        font-family:Bahnschrift;
    }

    .radio input[type="radio"], .radio-inline input[type="radio"], .checkbox input[type="checkbox"], .checkbox-inline input[type="checkbox"] {
        margin-left: 0px;

    }
    

    .my-class{
        color:black;
    }

   
</style>


<div class="container">
    <div class="row vertical-offset-100">
        <div class="col-md-4 col-md-offset-4" style="margin-top: 6%;">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Iniciar Sesión</h3>
                </div>
                
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
            {
                        @Html.AntiForgeryToken()
                        <div class="panel-body">
                            <form accept-charset="UTF-8" role="form">
                                <fieldset>
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })                                    
                                    <div class="form-group">
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <div class="form-group has-feedback">                                          
                                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password", id = "myInput" })
                                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                            @*<i onclick="myFunction()" class="glyphicon glyphicon-eye-open form-control-feedback"></i>*@
                                        </div> 
                                        <input  type="checkbox" onclick="myFunction()"/> Show Password
                                       
                                    </div>
                                    <div class="form-group">
                                        <div class="checkbox" id="check">
                                            @Html.CheckBoxFor(m => m.RememberMe)
                                            @Html.LabelFor(m => m.RememberMe)
                                        </div>
                                    </div>
                                    
                                    <input  class="btn btn-lg btn-info btn-block" type="submit" value="Login">
                                </fieldset>

                         

                                <div class="row"><a style="color:black; margin-left:5%;" href="register">Registrar</a></div>
                               <div class="row"><a style="color:black; margin-left:5%;" href="ForgotPassword">Olvide mi Contraseña</a></div>
                                
                               

                            

                            </form>
                        </div>
                    }
                

</div>
        </div>
    </div>
</div>


<script>
    function myFunction() {
        var x = document.getElementById("myInput");
        if (x.type === "password") {
            x.type = "text";
        } else {
            x.type = "password";
        }
    }
</script>


@Scripts.Render("~/bundles/jqueryval")
